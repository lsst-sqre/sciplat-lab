name: Manually triggered multiplatform build of sciplat-lab container

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'EUPS tag of input DM Pipelines Stack container'
        required: true
        default: ''
      supplementary:
        description: 'Supplementary tag for experimental builds; yields output tag exp_tag_supplementary'
        required: false
        default: ''
      image:
        description: 'fully-qualified URI for output Docker image'
        required: false
        default: 'us-central1-docker.pkg.dev/rubin-shared-services-71ec/sciplat/sciplat-lab,ghcr.io/lsst-sqre/sciplat-lab,docker.io/lsstsqre/sciplat-lab'
      input:
        description: 'input image; you probably should change at most the tag'
        required: false
        default: 'ghcr.io/lsst-sqre/nublado-jupyterlab-base:tickets-DM-52583'

# We need actions/write if we want to do a GH App, and we need
# packages/write to push to ghcr.io with GITHUB_TOKEN
permissions:
  actions: write
  contents: read
  packages: write
  statuses: read

jobs:
  determine_version:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      version: ${{ steps.calculate_version.outputs.version }}
      first_tag: ${{ steps.calculate_tags.outputs.first_tag }}
      rest_tags: ${{ steps.calculate_tags.outputs.rest_tags }}
      all_tags: ${{ steps.calculate_tags.outputs.all_tags }}
    env:
      tag: ${{ github.event.inputs.tag }}
      supplementary: ${{ github.event.inputs.supplementary }}
      image: ${{ github.event.inputs.image }}
      input: ${{ github.event.inputs.input }}

    steps:
      - name: checkout_setup
        uses: actions/checkout@v4

      - name: calculate_version
        id: calculate_version
        shell: bash
        run: |
          . scripts/helper-functions.sh
          version=$( tag_to_version )
          echo "version=${version}" >> ${GITHUB_OUTPUT}
          
      - name: calculate_tags
        id: calculate_tags
        shell: bash
        run: |
          . scripts/helper-functions.sh
          tags=$( platform=amd64 calculate_tags | tr ',' ' ' )
          all_tags=""
          for t in ${tags}; do
              extracted_tag=$(echo ${t} | cut -d ':' -f 2 | \
                  sed -e 's/-amd64$//')
              if [ "${extracted_tag}" = "${tag}" ]; then
                  continue
              fi
              if [ -z "${all_tags}" ]; then
                  all_tags="${t}"
              else
                  all_tags="${all_tags},${t}"
              fi
          done
          first_tag=$( echo ${all_tags} | cut -d ',' -f 1 )
          rest_tags=$( echo ${all_tags} | cut -d ',' -f 2- )
          echo "all_tags=${all_tags}" >> ${GITHUB_OUTPUT}
          echo "first_tag=${first_tag}" >> ${GITHUB_OUTPUT}
          echo "rest_tags=${rest_tags}" >> ${GITHUB_OUTPUT}

  build:
    needs: determine_version
    uses: lsst-sqre/multiplatform-build-and-push/.github/workflows/build.yaml@v1
    with:
      images: ${{ github.event.inputs.image }}
      additional-tags: ${{ needs.determine_version.outputs.rest_tags }}
      tag: ${{ needs.determine_version.outputs.first_tag }}
      build-args: |
        input=${{ github.event.inputs.input }}
        tag=${{ github.event.inputs.tag }}
        image=${{ github.event.inputs.image }}
        supplementary=${{ github.event.inputs.supplementary }}
        version=${{ needs.get_version.outputs.version }}
      cache: false
    secrets: inherit
