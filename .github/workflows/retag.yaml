name: Manually triggered retag of sciplat-lab container

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker tag of input container'
        required: true
        default: ''
      supplementary:
        description: 'Additional value to tag container with'
        required: true
        default: ''
      image:
        description: 'fully-qualified URI for output Docker image'
        required: false
        default: 'us-central1-docker.pkg.dev/rubin-shared-services-71ec/sciplat/sciplat-lab,ghcr.io/lsst-sqre/sciplat-lab,docker.io/lsstsqre/sciplat-lab'

# We need actions/write if we want to do a GH App, and we need
# packages/write to push to ghcr.io with GITHUB_TOKEN (currently not
# working, under investigation)
permissions:
  actions: write
  contents: read
  packages: write
  statuses: read

jobs:
  retag:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    env:
      old_tag: ${{ github.event.inputs.tag }}
      new_tag: ${{ github.event.inputs.supplementary }}
      images: ${{ github.event.inputs.image }}
    steps:
      - name: distribute_tags
        id: distribute_tags
        shell: bash
        run: |
          first=$( echo ${images} | cut -d ',' -f 1 )
          src="${first}:${old_tag}"
          s_imgs=$( echo ${images} | tr ',' ' ' )
          tgt=""
          for img in ${s_imgs}; do
              if [ -n "${tgt}" ]; then
                  tgt="${tgt},"
              fi
              tgt="${tgt}${img}:${new_tag}"
          done
          echo "src=${src}" >> ${GITHUB_OUTPUT}
          echo "tgt=${tgt}" >> ${GITHUB_OUTPUT}

      - name: login
        uses: lsst-sqre/multi-repository-login@v1
        with:
          images: ${{ github.event.inputs.image }}
          use_nonstandard_ghcr_token: true
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          GAR_PUSH_TOKEN: ${{ secrets.GAR_PUSH_TOKEN }}
          GHCR_PUSH_TOKEN: ${{ secrets.GHCR_PUSH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: make_manifest
        uses: Noelware/docker-manifest-action@v1
        with:
          inputs: ${{ steps.distribute_tags.outputs.src }}
          tags: ${{ steps.distribute_tags.outputs.tgt }}
