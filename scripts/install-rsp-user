#!/usr/bin/env bash
set -x
# -u causes failure in activate: ADDR2LINE: unbound variable
set -eo pipefail
stackdir=/opt/lsst/software/stack

# Never allow the installation to upgrade rubin_env.  Generally enforcing
# the pin is only needed for releases, where the current version may have
# moved ahead.

# As of w_2024_50, the `mamba` alias provided by the stack fails because it
# uses a function, `__reactivate_conda` provided by `conda.sh` which is
# never sourced.
# This is probably a larger problem, but above our pay grade.  Work around it.
profdir=$stackdir/conda/etc/profile.d
mv $profdir/mamba.sh $profdir/mamba.sh.save

source $stackdir/loadLSST.bash

rubin_env_ver=$(mamba list rubin-env$ --no-banner --json | \
		    jq -r '.[0].version')


# Refactor of rubin-env-rsp coming later to separate user packages from
# Lab environment packages.
mamba install --no-banner -y "rubin-env-rsp==${rubin_env_ver}"

# As with conda->mamba, uv is compatible with pip but much faster.  It
# matters less here, of course, because there are many fewer
# pip-installed packages.
pip install uv

# These are the things that are not available on conda-forge.
# Note that we are not installing with `--upgrade`.  That is so that if
# lower-level layers have already installed the package, pinned to a version
# they need, we won't upgrade it.  But if it isn't already installed, we'll
# just take the latest available.  `--no-build-isolation` ensures that any
# source packages use C++ libraries from conda-forge.

# "--no-build-isolation" means we're also responsible for the dependencies
# not already provided by something in the conda env.  In this case,
# structlog and symbolicmode from lsst-rsp.
uv pip install --no-build-isolation \
    'lsst-rsp>=0.7.1' \
    structlog \
    'symbolicmode<3' \
    'jupyter_firefly_extensions>=0.15.0'

# Clean caches
mamba clean -a -y -f --no-banner
uv cache clean

# Put the alias back.
mv $profdir/mamba.sh.save $profdir/mamba.sh
