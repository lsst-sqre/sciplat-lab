#!/usr/bin/env bash
set -x
# -u causes failure in activate: ADDR2LINE: unbound variable
set -eo pipefail
stackdir=/opt/lsst/software/stack

SHELL=bash
export SHELL

# Never allow the installation to upgrade rubin_env.  Generally enforcing
# the pin is only needed for releases, where the current version may have
# moved ahead.

# mamba is ... going away in September 2025.
profdir=$stackdir/conda/etc/profile.d
if [ -f $profdir/mamba.sh ]; then
    mv $profdir/mamba.sh $profdir/mamba.sh.save
fi

source $stackdir/loadLSST.bash

rubin_env_ver=$(conda list rubin-env$ --json | jq -r '.[0].version')


# Refactor of rubin-env-rsp coming later to separate user packages from
# Lab environment packages.
conda install -y "rubin-env-rsp==${rubin_env_ver}"

# uv is compatible with pip but much faster.
pip install uv

# These are the things that are not available on conda-forge.
# Note that we are not installing with `--upgrade`.  That is so that if
# lower-level layers have already installed the package, pinned to a version
# they need, we won't upgrade it.  But if it isn't already installed, we'll
# just take the latest available.  `--no-build-isolation` ensures that any
# source packages use C++ libraries from conda-forge.

# "--no-build-isolation" means we're also responsible for the dependencies
# not already provided by something in the conda env.  In this case,
# structlog and symbolicmode from lsst-rsp.
uv pip install --no-build-isolation \
    'lsst-rsp>=0.7.1' \
    structlog \
    'symbolicmode<3' \
    'jupyter_firefly_extensions>=0.15.0'

# Clean caches
conda clean -a -y -f
uv cache clean
