#!/usr/bin/env bash
set -x

# -u makes lsstinstall fail, via conda ADDR2LINE: unbound variable.
set -eo pipefail

TAG=$1

SHELL=bash
export SHELL

MAMBA_ROOT_PREFIX="/opt/lsst/software/stack/conda"
export MAMBA_ROOT_PREFIX

stackdir=/opt/lsst/software/stack
sbt=https://raw.githubusercontent.com/lsst/shebangtron/main/shebangtron

mkdir -p $stackdir
cd $stackdir
curl -OL https://ls.st/lsstinstall
chmod u+x lsstinstall
# Alas, if we don't run it with bash, some of the activate scripts
# (rust and openmpi) fail, because they assume bash, not POSIX shell.
bash ./lsstinstall -T $TAG
source $stackdir/loadLSST.bash
for prod in $EUPS_PRODUCTS; do
    eups distrib install --no-server-tags "$prod" -t "$EUPS_TAG"
done

for product in lsst_distrib lsst_sitcom; do
    eups distrib install -t $TAG $product
done
curl -sSL $sbt | python
setup lsst_distrib

# Let's hope there are no spaces in filenames under $EUPS_PATH
echo "---begin postinstall cleanup---"
echo "Pre-cleanup ${stackdir} size:"
du -sm ${stackdir}
for dirn in tests src .git; do
    find ${EUPS_PATH} -name ${dirn} -type d -print0 | xargs -0 rm -rf
done
find ${EUPS_PATH} \
     \( -path "*doc/html" -o -path "*doc/xml" \) \
     -type d -print0 | xargs -0 rm -rf
echo "Pre-strip ${stackdir} size"
du -sm
# Do this the hard way
find ${EUPS_PATH} -type f -name "*.so" -print0 | \
    xargs -0 strip -p --strip-unneeded || /bin/true
exes=find ${EUPS_PATH} -type f -executable -print0 | \
    xargs -0 strip -p --strip-unneeded || /bin/true
echo "Post-cleanup ${stackdir} size:"
du -sm ${stackdir}
conda clean -a -f -y  # Not clear that -f is safe.
echo "Post-conda-clean ${stackdir} size:"
du -sm ${stackdir}
echo "---end postinstall cleanup---"
